/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package selldatabase;

import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultListModel;

/**
 *
 * @author ASUS
 */
public class VIEW extends javax.swing.JFrame {
    private DefaultListModel<String> model = new DefaultListModel<>();
    public static ArrayList<String> ownersEmails = new ArrayList<>();
    /**
     * Creates new form VIEW
     */
    public VIEW(List<String> items, int a) {
        /*if(a !=2){
            System.out.println("!2");///////////////////////////////////
            jLabel2.setText("Announcements");
            System.out.println("!2");///////////////////////////////////
            jLabel2.setVisible(true);
            System.out.println("!2");/////////////////////////////////s//
        }else{
            System.out.println("2");///////////////////////////////////
            jLabel2.setText("Massages");
            System.out.println("2");///////////////////////////////////
            jLabel2.setVisible(true);
            System.out.println("2");///////////////////////////////////
        }
        */
        System.out.println("constructor of veiw started");///////////////////////////////////
        initComponents();
        jList1.setModel(model);
        for(String item : items){
            model.addElement(item);
        }
        System.out.println("list actions is called");///////////////////////////////////
        this.setVisible(true);
        SetListAction(a);
        System.out.println("constructor of veiw ended");///////////////////////////////////
    }
    
    //public void show(){
     //   System.out.println(ownersEmails.size());
     //   for(String s : ownersEmails){
     //       System.out.println(s);
     //   }}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jScrollPane1.setBorder(null);

        jList1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jList1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5", "Item 6", "Item 7", "Item 8", "Item 9", "Item 10", "Item 11" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(jList1);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 388, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(56, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VIEW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VIEW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VIEW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VIEW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
               
            }
        });
    }
    public void addItemsToList(String item){
        
    }
    private void SetListAction(int a){
        jList1.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            Connections ob = new Connections();
            @Override
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                if (!evt.getValueIsAdjusting()) {
                    
                    if(a == 1){
                        String selectedItem = (String) jList1.getSelectedValue();
                        int index = model.indexOf(selectedItem);
                        String email = ownersEmails.get(index);
                        Detailed.email2 =email;
                        Detailed.name2 = selectedItem;
                        
                        ob.connectToView(email,selectedItem,"category", 1);
                        
                        ob.connectToView(email,selectedItem,"price", 1);
                        
                        ob.connectToView(email,selectedItem,"phone_number", 1);
                       
                        ob.connectToView(email,selectedItem,"color",1);
                        
                        ob.connectToView(email,selectedItem,"brand_model",1);
                        
                        ob.connectToView(email,selectedItem,"Kilometer", 1);
                        
                        ob.connectToView(email,selectedItem,"has_accident",1);
                        
                         new Detailed(1);
                        
                        return;
                        
                        /////////////////////////////////////////
                    }else if(a == 2){
                        
                        String selectedItem = (String) jList1.getSelectedValue();
                        
                        Massager.old = ob.returnChatContents(selectedItem);
                        
                        Massager.chatName = selectedItem;
                        new Massager().setVisible(true);
                    }else if (a == 3){
                        
                        String selectedItem = (String) jList1.getSelectedValue();
                        Edit.name2 = selectedItem;
                        ob.connectToView(ManageAccount.Email,selectedItem,"category", 2);
                        ob.connectToView(ManageAccount.Email,selectedItem,"price", 2);
                        ob.connectToView(ManageAccount.Email,selectedItem,"phone_number", 2);
                        ob.connectToView(ManageAccount.Email,selectedItem,"color",2);
                        ob.connectToView(ManageAccount.Email,selectedItem,"brand_model",2);
                        ob.connectToView(ManageAccount.Email,selectedItem,"Kilometer", 2);
                        ob.connectToView(ManageAccount.Email,selectedItem,"has_accident",2);
                        new Edit().setVisible(true);
                    }else{
                        
                        String selectedItem = (String) jList1.getSelectedValue();
                        Detailed.name2= selectedItem;
                        ob.connectToView(ManageAccount.Email,selectedItem,"category", 1);
                        ob.connectToView(ManageAccount.Email,selectedItem,"price", 1);
                        ob.connectToView(ManageAccount.Email,selectedItem,"phone_number", 1);
                        ob.connectToView(ManageAccount.Email,selectedItem,"color",1);
                        ob.connectToView(ManageAccount.Email,selectedItem,"brand_model",1);
                        ob.connectToView(ManageAccount.Email,selectedItem,"Kilometer", 1);
                        ob.connectToView(ManageAccount.Email,selectedItem,"has_accident",1);
                        new Detailed(0).setVisible(true);
                    }
                    
                    
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JList<String> jList1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
